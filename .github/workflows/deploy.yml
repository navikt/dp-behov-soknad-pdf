name: Build and deploy

on: [ push ]

jobs:
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      checks: "write"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        with:
          # arguments: --configuration-cache
          arguments: check build installDist

      - name: Publish results (unit test)
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success() || failure()
        with:
          junit_files: "**/build/test-results/test/TEST-*.xml"

      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdagpenger
          tag: ${{ github.sha }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev
    needs: [ build ]
    # if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: .nais/dev/vars.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to Production
    needs: [ deploy-dev, build ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: .nais/prod/vars.yaml
          PRINT_PAYLOAD: true

  reportFailure:
    name: Report build failure to Slack
    needs: [ build ]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"$CHANNEL\", \"username\": \"$USERNAME\", \"text\": \"$MESSAGE\", \"icon_emoji\": \":neutral_face:\"}" $WEBHOOK_URL
        env:
          USERNAME: "Github Actions"
          MESSAGE: "The build is broken!"
          CHANNEL: "#team-dagpenger-build"
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
